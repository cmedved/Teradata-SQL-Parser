version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'antlr'

sourceCompatibility = '1.8'
mainClassName = "us.shadowlabs.tdparser.Main"

repositories {
    mavenCentral()
}


jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}

dependencies {
    // excluding st4 that we do not need and that depends on an older version of antlr
    compile (group: 'org.antlr', name: 'antlr4', version: '4.7', configuration: 'runtime')  {
        exclude group: 'org.antlr', module:'ST4'
    }
    antlr (group: 'org.antlr', name: 'antlr4', version: '4.7') 
    compile 'org.apache.logging.log4j:log4j-core:+'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    compile group: 'com.h2database', name: 'h2', version: '1.4.197'
    compile fileTree(dir: 'lib', include: '*.jar')
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

File generatedSourceDir = file('src/generated/main/java')

def srcDir = fileTree('src/main/antlr').include('**/*.g4')

generateGrammarSource {
    source = srcDir
    outputDirectory = generatedSourceDir
    arguments += ["-visitor", "-long-messages", "-package", "us.shadowlabs.tdparser.antlr"]
}

clean.doFirst {
    println "deleting ${generatedSourceDir.absolutePath}"
    delete "${generatedSourceDir.absolutePath}"
}

idea {
    module {
        generatedSourceDirs += generatedSourceDir
    }
}

sourceSets {
    main {
        java {
            srcDirs += [generatedSourceDir]
        }
    }
}